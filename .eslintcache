[{"/Users/utilisateur/Desktop/Dev/Wild/checkpoint4/my-crypto/src/index.js":"1","/Users/utilisateur/Desktop/Dev/Wild/checkpoint4/my-crypto/src/reportWebVitals.js":"2","/Users/utilisateur/Desktop/Dev/Wild/checkpoint4/my-crypto/src/App.js":"3","/Users/utilisateur/Desktop/Dev/Wild/checkpoint4/my-crypto/src/components/Navbar.jsx":"4","/Users/utilisateur/Desktop/Dev/Wild/checkpoint4/my-crypto/src/components/CryptoList.jsx":"5","/Users/utilisateur/Desktop/Dev/Wild/checkpoint4/my-crypto/src/components/FloatingButton.jsx":"6","/Users/utilisateur/Desktop/Dev/Wild/checkpoint4/my-crypto/src/components/Profil.jsx":"7","/Users/utilisateur/Desktop/Dev/Wild/checkpoint4/my-crypto/src/components/CryptoTable.jsx":"8"},{"size":496,"mtime":1612381792922,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1612341235621,"results":"11","hashOfConfig":"10"},{"size":556,"mtime":1612430156400,"results":"12","hashOfConfig":"10"},{"size":1464,"mtime":1612345533897,"results":"13","hashOfConfig":"10"},{"size":293,"mtime":1612377222321,"results":"14","hashOfConfig":"10"},{"size":2928,"mtime":1612445758833,"results":"15","hashOfConfig":"10"},{"size":4600,"mtime":1612453666609,"results":"16","hashOfConfig":"10"},{"size":5131,"mtime":1612445705441,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"rkhjsn",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/Users/utilisateur/Desktop/Dev/Wild/checkpoint4/my-crypto/src/index.js",[],["38","39"],"/Users/utilisateur/Desktop/Dev/Wild/checkpoint4/my-crypto/src/reportWebVitals.js",[],"/Users/utilisateur/Desktop/Dev/Wild/checkpoint4/my-crypto/src/App.js",[],"/Users/utilisateur/Desktop/Dev/Wild/checkpoint4/my-crypto/src/components/Navbar.jsx",[],"/Users/utilisateur/Desktop/Dev/Wild/checkpoint4/my-crypto/src/components/CryptoList.jsx",["40","41","42"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport CryptoTable from \"./CryptoTable\";\n\nconst instance = axios.create({ baseURL: \"http://localhost:5000/\" });\n\nconst CryptoList = props => {\n    \n  return (\n    <CryptoTable/>\n  );\n};\n\nexport default CryptoList;\n","/Users/utilisateur/Desktop/Dev/Wild/checkpoint4/my-crypto/src/components/FloatingButton.jsx",["43","44"],"import React, { useState } from \"react\";\nimport {\n  Container\n} from \"react-floating-action-button\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input\n} from \"reactstrap\";\nimport axios from \"axios\";\n\nconst instance = axios.create({ baseURL: \"http://localhost:5000/\" });\n\nconst FloatingButton = (props) => {\n  const [modal, setModal] = useState(false);\n  const [unmountOnClose, setUnmountOnClose] = useState(false);\n  const [newCoin, setNewCoin] = useState({\n    name: \"\",\n    coin: \"\",\n    type: \"\",\n    description: \"\"\n  });\n  const toggle = () => setModal(!modal);\n  const parentCallback = props.parentCallback\n  \n  const validateAddCoin = e => {\n    setModal(!modal);\n    setNewCoin({ id: \"\", name: \"\", coin: \"\", type: \"\", description: \"\" });\n    addCryptoOnDatabase()\n    // Send to CRYPTO TABLE componant new crypto\n    parentCallback(newCoin)\n  };\n\n  async function addCryptoOnDatabase() {\n    try {\n      // Add crypto in database\n      const cryptoList = await instance.post(`/cryptolist/newCrypto`, {\n        newCoin\n      });\n      const newList = await instance.get(`/cryptolist`);\n      console.log(newList.data)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setNewCoin({ ...newCoin, [name]: value });\n  };\n\n  return (\n    <Container>\n      <Button color=\"success\" onClick={toggle}>\n        Add crypto\n      </Button>\n      <Modal isOpen={modal} toggle={toggle} unmountOnClose={unmountOnClose}>\n        <ModalHeader toggle={toggle}>Add crypto to dahsboard </ModalHeader>\n        <ModalBody>\n          Name :\n          <Input\n            name=\"name\"\n            onChange={handleInputChange}\n            value={newCoin.name}\n            type=\"textarea\"\n            placeholder=\"Write coin name \"\n            rows={1}\n          />\n          Coin :\n          <Input\n            name=\"coin\"\n            onChange={handleInputChange}\n            value={newCoin.coin}\n            type=\"textarea\"\n            placeholder=\"Write coin slug\"\n            rows={1}\n          />\n          Type :\n          <Input\n            name=\"type\"\n            onChange={handleInputChange}\n            value={newCoin.type}\n            type=\"textarea\"\n            placeholder=\"Write coin type\"\n            rows={1}\n          />\n          Description :\n          <Input\n            name=\"description\"\n            onChange={handleInputChange}\n            value={newCoin.description}\n            type=\"textarea\"\n            placeholder=\"Write coin description\"\n            rows={1}\n          />\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={validateAddCoin}>\n            Validate\n          </Button>{\" \"}\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default FloatingButton;\n","/Users/utilisateur/Desktop/Dev/Wild/checkpoint4/my-crypto/src/components/Profil.jsx",["45","46","47"],"/Users/utilisateur/Desktop/Dev/Wild/checkpoint4/my-crypto/src/components/CryptoTable.jsx",["48","49","50","51","52","53"],"import React, { useEffect, useState } from \"react\";\nimport { Table } from \"reactstrap\";\nimport axios from \"axios\";\nimport { Button } from \"reactstrap\";\nimport FloatingButton from \"./FloatingButton\";\n\nlet coinCeckoBaseUrl = \"https://api.coingecko.com/api/v3/simple/price?ids=\";\nconst instance = axios.create({ baseURL: \"http://localhost:5000/\" });\n\nconst CryptoTable = props => {\n  const [cryptos, setCryptos] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // Retrive list from database and update state with it\n        const cryptoList = await instance.get(`/cryptolist`);\n        let newList = [];\n        for (let i = 0; i < cryptoList.data.length; i++) {\n          newList.push(cryptoList.data[i]);\n        }\n        console.log(\"useEffect cryptoList => \",cryptoList)\n        setCryptos(newList);\n        retrieveCoinPrice();\n      } catch (err) {}\n    }\n    fetchData();\n  }, []);\n\n  async function updateAllAcutalPriceInDatabase(coinPrice, cryptoId) {\n    try {\n      // Update all crypto price, retrieve new list and set state with it\n      const cryptoList = await instance.post(`/cryptolist`, {\n        id: cryptoId,\n        actualPrice: coinPrice\n      });\n      const newList = await instance.get(`/cryptolist`);\n      setCryptos(newList.data);\n    } catch (err) {}\n  }\n\n  async function deleteCryptoOnDatabase(cryptoId) {\n    try {\n      // Delete crypto in database\n      const cryptoList = await instance.delete(`/cryptolist/${cryptoId}`);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  // Delete works only in state\n  async function deleteCoin(id) {\n    let newArray = cryptos;\n    newArray = newArray.filter(function(item) {\n      return item.id !== id;\n    });\n    await setCryptos(newArray);\n    await deleteCryptoOnDatabase(id);\n  }\n\n  async function setStateAndDatabaseWithNewPrice(\n    setCryptos,\n    cryptos,\n    index,\n    coinPrice\n  ) {\n    await setCryptos([...cryptos, (cryptos[index].actualPrice = coinPrice)]);\n    updateAllAcutalPriceInDatabase(coinPrice, cryptos[index].id);\n  }\n\n  async function siwtchOnCryptoNameForUpdatePrice(\n    coinName,\n    coinPrice,\n    coinInformation,\n    setStateAndDatabaseWithNewPrice,\n    setCryptos,\n    cryptos,\n    index\n  ) {\n    // FUNCTION pour remplacer switch\n    switch (coinName) {\n      case \"bitcoin\":\n        coinPrice = coinInformation.data.bitcoin.usd;\n        await setStateAndDatabaseWithNewPrice(\n          setCryptos,\n          cryptos,\n          index,\n          coinPrice\n        );\n        break;\n      case \"ethereum\":\n        coinPrice = coinInformation.data.ethereum.usd;\n        await setStateAndDatabaseWithNewPrice(\n          setCryptos,\n          cryptos,\n          index,\n          coinPrice\n        );\n        break;\n      case \"litecoin\":\n        coinPrice = coinInformation.data.litecoin.usd;\n        await setStateAndDatabaseWithNewPrice(\n          setCryptos,\n          cryptos,\n          index,\n          coinPrice\n        );\n        break;\n    }\n\n    return coinPrice;\n  }\n\n  // Retrive online crypto price\n  async function retrieveCoinPrice() {\n    if (cryptos.length > 0) {\n      // TODO : USE FOR EACH\n      cryptos.forEach(async (crypto, index) => {\n        try {\n          let coinPrice = \"\";\n          const coinName = crypto.name.toLowerCase();\n          const coinCeckoFinalUrl =\n            coinCeckoBaseUrl + coinName + \"&vs_currencies=USD\";\n          const coinInformation = await axios\n            .create({ baseURL: coinCeckoFinalUrl })\n            .get();\n          coinPrice = await siwtchOnCryptoNameForUpdatePrice(\n            coinName,\n            coinPrice,\n            coinInformation,\n            setStateAndDatabaseWithNewPrice,\n            setCryptos,\n            cryptos,\n            index\n          );\n        } catch (err) {\n          console.log(err);\n        }\n      });\n    }\n  }\n\n  // Retrieve new crypto from FLOATING BUTTON componant\n  async function handleCallback(childData) {\n    setCryptos([...cryptos, childData])\n  }\n\n  if (cryptos != undefined) {\n    return (\n      <Table responsive>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Coin</th>\n            <th>Actual Price</th>\n            <th>Type</th>\n            <th>Market cap</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {cryptos.map((crypto, index) => {\n            return (\n              <tr>\n                <td>{crypto.name}</td>\n                <td>{crypto.coin}</td>\n                <td>{crypto.actualPrice}</td>\n                <td>{crypto.type}</td>\n                <td>Market cap</td>\n                <td>\n                  <Button onClick={() => deleteCoin(crypto.id)} color=\"warning\">\n                    Delete\n                  </Button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n        <Button onClick={() => retrieveCoinPrice()} color=\"primary\">\n          Update all price\n        </Button>\n        <FloatingButton parentCallback={handleCallback} />\n      </Table>\n    );\n  } else {\n    return \"no coin actually\";\n  }\n};\n\nexport default CryptoTable;\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":26},{"ruleId":"58","severity":1,"message":"62","line":1,"column":28,"nodeType":"60","messageId":"61","endLine":1,"endColumn":36},{"ruleId":"58","severity":1,"message":"63","line":5,"column":7,"nodeType":"60","messageId":"61","endLine":5,"endColumn":15},{"ruleId":"58","severity":1,"message":"64","line":19,"column":26,"nodeType":"60","messageId":"61","endLine":19,"endColumn":43},{"ruleId":"58","severity":1,"message":"65","line":40,"column":13,"nodeType":"60","messageId":"61","endLine":40,"endColumn":23},{"ruleId":"58","severity":1,"message":"66","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":26},{"ruleId":"58","severity":1,"message":"67","line":15,"column":8,"nodeType":"60","messageId":"61","endLine":15,"endColumn":14},{"ruleId":"58","severity":1,"message":"68","line":20,"column":9,"nodeType":"60","messageId":"61","endLine":20,"endColumn":25},{"ruleId":"69","severity":1,"message":"70","line":28,"column":6,"nodeType":"71","endLine":28,"endColumn":8,"suggestions":"72"},{"ruleId":"58","severity":1,"message":"65","line":33,"column":13,"nodeType":"60","messageId":"61","endLine":33,"endColumn":23},{"ruleId":"58","severity":1,"message":"65","line":45,"column":13,"nodeType":"60","messageId":"61","endLine":45,"endColumn":23},{"ruleId":"73","severity":1,"message":"74","line":81,"column":5,"nodeType":"75","messageId":"76","endLine":109,"endColumn":6},{"ruleId":"58","severity":1,"message":"77","line":129,"column":13,"nodeType":"60","messageId":"61","endLine":129,"endColumn":22},{"ruleId":"78","severity":1,"message":"79","line":148,"column":15,"nodeType":"80","messageId":"81","endLine":148,"endColumn":17},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'instance' is assigned a value but never used.","'setUnmountOnClose' is assigned a value but never used.","'cryptoList' is assigned a value but never used.","'Component' is defined but never used.","'sha256' is defined but never used.","'openTabsFromLink' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveCoinPrice'. Either include it or remove the dependency array.","ArrayExpression",["84"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'coinPrice' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [retrieveCoinPrice]",{"range":"87","text":"88"},[923,925],"[retrieveCoinPrice]"]